version: '3.9'
services:
  
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - "backend"

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - backend

  nestjs:
    build: nestjs/
    image: nestjs
    container_name: nestjs
    restart: always
    ports:
      - "8888:8888"
      - ${NESTJS_PORT}:${NESTJS_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URI: ${POSTGRES_URI}
      NEXTJS_PORT: ${NEXTJS_PORT}
      NEXTJS_BASE_URL: ${NEXTJS_BASE_URL}
      NESTJS_PORT: ${NESTJS_PORT}
      NESTJS_BASE_URL: ${NESTJS_BASE_URL}
      INTRA_CLIENT_ID: ${INTRA_CLIENT_ID}
      INTRA_CLIENT_SECRET: ${INTRA_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      JWT_COOKIE_NAME: ${JWT_COOKIE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      TWO_FACTOR_AUTH_APP_NAME: ${TWO_FACTOR_AUTH_APP_NAME}
    volumes:
      - "~/Desktop/uploads:/app/uploads"
    depends_on:
      - postgres
    networks:
      - frontend
      - backend

  nextjs:
    build: nextjs/
    image: nextjs
    container_name: nextjs
    restart: always
    ports:
      - ${NEXTJS_PORT}:${NEXTJS_PORT}
    environment:
      PORT: ${NEXTJS_PORT}
      # NEXT_PUBLIC_NESTJS_BASE_URL: ${NESTJS_BASE_URL}
      # NEXT_PUBLIC_GRAPHQL_WS_ENDPOINT: ${NESTJS_WS_BASE_URL}/v1/graphql
      # NEXT_PUBLIC_GRAPHQL_ENDPOINT: ${NESTJS_BASE_URL}/v1/graphql
      # NEXT_PUBLIC_GAME_WS_ENDPOINT: ${NESTJS_GAME_WS_ENDPOINT}
      # NEXT_PUBLIC_INTRA_CLIENT_ID: ${INTRA_CLIENT_ID}
      # NEXT_PUBLIC_GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
    depends_on:
      - nestjs
    networks:
      - frontend

networks:
  frontend:
  backend: