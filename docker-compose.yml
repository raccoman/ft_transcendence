version: '3.9'
services:
  
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - "backend"

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - backend

  nextjs:
    build: nextjs/
    container_name: nextjs
    restart: always
    ports:
      - ${NEXTJS_PORT}:${NEXTJS_PORT}
    env_file:
      - "nextjs/.env.production"
    environment:
      PORT: ${NEXTJS_PORT}
      NEXT_PUBLIC_NESTJS_BASE_URL: ${NESTJS_BASE_URL}
      NEXT_PUBLIC_GRAPHQL_WS_ENDPOINT: ${GRAPHQL_WS_ENDPOINT}
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT}
      NEXT_PUBLIC_HTTP_WS_ENDPOINT: ${HTTP_WS_ENDPOINT}
      NEXT_PUBLIC_AUTH_CALLBACK_URI: ${AUTH_CALLBACK_URI}
      NEXT_PUBLIC_INTRA_CLIENT_ID: ${INTRA_CLIENT_ID}
      NEXT_PUBLIC_GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
    networks:
      - frontend

  nestjs:
    build: nestjs/
    container_name: nestjs
    restart: always
    ports:
      - ${NESTJS_PORT}:${NESTJS_PORT}
    env_file:
      - "./.env"
    volumes:
      - "~/Desktop/ft_transcendence/nestjs/uploads:/app/uploads"
    networks:
      - frontend

networks:
  frontend:
  backend: